(deflisten current_workspace :initial 1 
    `~/.local/bin/scripts/hyprland_eventlistener.sh`)

(defwidget bar []
    (centerbox :orientation "h" :class "bar"
        (workspaces)
        (date)
        (side)))

(deflisten datestr :initial "a d/m/Y H:M:S"
    `~/.local/bin/scripts/clock.sh`)

(defwidget volume []
    (label :text "hello" :class "volume"))

(defwidget ram []
    (label :text "[ RAM: ${round(EWW_RAM['total_mem'] / 1073741824, 2)}Gi / ${round(EWW_RAM['used_mem'] / 1073741824, 2)}Gi ]" :class "ram"))

(defwidget side []
    (box :class "side"
        :orientation "h"
        :space-evenly true
        :halling "start"
        :spacing 10
        (ram)
        (volume)))

(defwidget date []
    (label :class "date" :text "[ ${datestr} ]"))

(defwidget workspaces []
    (box :class "workspaces"
        :orientation "h"
        :space-evenly true
        :halign "start"
        :spacing 10
        (button :class {current_workspace == 1 ? "active" : ""} :onclick "hyprctl dispatch workspace 1" 1)
        (button :class {current_workspace == 2 ? "active" : ""} :onclick "hyprctl dispatch workspace 2" 2)
        (button :class {current_workspace == 3 ? "active" : ""} :onclick "hyprctl dispatch workspace 3" 3)
        (button :class {current_workspace == 4 ? "active" : ""} :onclick "hyprctl dispatch workspace 4" 4)
        (button :class {current_workspace == 5 ? "active" : ""} :onclick "hyprctl dispatch workspace 5" 5)
        (button :class {current_workspace == 6 ? "active" : ""} :onclick "hyprctl dispatch workspace 6" 6)
        (button :class {current_workspace == 7 ? "active" : ""} :onclick "hyprctl dispatch workspace 7" 7)
        (button :class {current_workspace == 8 ? "active" : ""} :onclick "hyprctl dispatch workspace 8" 8)
        (button :class {current_workspace == 9 ? "active" : ""} :onclick "hyprctl dispatch workspace 9" 9)))

(defwindow top-bar-1
    :monitor 0
    :geometry (geometry :x "0%"
        :y "10px"
        :width "1900"
        :height "30px"
        :anchor "top center")
    :stacking "fg"
    :exclusive true
    :windowtype "dock"
    :wm-ignore false
    (bar))

(defwindow top-bar-2
    :monitor 1
    :geometry (geometry :x "0%"
        :y "10px"
        :width "1900"
        :height "30px"
        :anchor "top center")
    :stacking "fg"
    :exclusive true
    :windowtype "dock"
    :wm-ignore false
    (bar))
